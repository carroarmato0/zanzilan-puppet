  proxy_cache_key "$server_name$request_uri";

  location / {
      # Some downloads are very large so we cache based on
      # range to keep single downloads quick and hence ensure
      # interactivity is good.
      #testing cache of 200 value
      #proxy_cache_valid 200 90d; proxy_cache_valid 206 90d;
      proxy_cache uplay;
      proxy_read_timeout 150;

      # Proxy
      proxy_next_upstream error timeout http_404;
      proxy_pass http://$host$request_uri;
      proxy_redirect off;

      # Upstream request headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # Useful headers for debugging / stats
      add_header X-Upstream-Status $upstream_status;
      add_header X-Upstream-Response-Time $upstream_response_time;
      add_header X-Upstream-Cache-Status $upstream_cache_status;

      # New settings - 2014-04-12 (i52)
      proxy_ignore_client_abort on;

      # Only download one copy at a time and use a large timeout so
      # this really happens, otherwise we end up wasting bandwith
      # getting the file multiple times.
      proxy_cache_lock on;
      proxy_cache_lock_timeout 1h;

      # Allow the use of state entries
      proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

      # Allow caching of 200 but not 301 or 302 as our cache key may not include query params
      # hence may not be valid for all users
      proxy_cache_valid 200 90d;
      proxy_cache_valid 301 302 0;

      # Enable cache revalidation
      proxy_cache_revalidate on;

      # By-pass with nocache=1
      proxy_cache_bypass $arg_nocache;

      # 40G max file
      proxy_max_temp_file_size 40960m;

      proxy_set_header Range $http_range;
      proxy_set_header If-Range $http_if_range;
      proxy_cache_key "$server_name$uri $http_range";
  }
